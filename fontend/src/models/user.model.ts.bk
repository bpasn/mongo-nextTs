import argon2 from 'argon2';
import mongoose from "mongoose";
import { DocumentType } from '@typegoose/typegoose'
import { nanoid } from "nanoid";

export const UserSchema = new mongoose.Schema({
    email: {
        unique: true,
        type: String,
        lowercase: true,
        required: [true,'email is require'],
    },
    firstName: {
        type: String,
        required: [true,'first_name is require'],
    },
    lastName: {
        type: String,
        required: [true,'last_name is require'],
    },
    password: {
        type: String,
        required: [true,'password is require'],
        min:6,
        validate: {
            validator: async (v: string) => {
                return await argon2.verify(v, "")
            },
            message: (props: any) => `${props.value} is not a valid password!`
        },
    },
    verificationCode: {
        type: String,
        required: true,
        default: () => nanoid()
    },
    passwordResetCode: String

})

const UserModel = mongoose.model("user", UserSchema)

export default mongoose.models.user || UserModel
